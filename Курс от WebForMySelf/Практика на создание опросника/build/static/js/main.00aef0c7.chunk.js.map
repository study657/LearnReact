{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/Ui/Button/Button.module.css","components/Ui/Loader/Loader.module.css","components/Auth/Auth.module.css","components/Ui/Input/Input.module.css","hoc/Layout/Layout.module.css","components/Ui/BackDrop/BackDrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/QuizList/QuizList.module.css","components/QuizCreator/QuizCreator.module.css","components/Ui/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/Ui/BackDrop/BackDrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/Ui/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/Ui/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","components/QuizList/QuizList.js","components/Ui/Input/Input.js","store/actions/auth.js","components/Auth/Auth.js","form/formFramwork.js","hoc/Layout/Auxililary/Auxililary.js","components/Ui/Select/Select.js","components/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","reportWebVitals.js","store/reducers/auth.js","store/reducers/create.js","store/reducers/quiz.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","BackDrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","timeout","window","setTimeout","number","isQuizFinished","clearTimeout","Quiz","fetchQuizesById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizId","a","get","response","data","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputPype","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","test","String","toLowerCase","AuthForm","onSubmit","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","createControl","config","validate","reguired","validateForm","hasOwnProperty","Auxililary","Select","options","option","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","vaidation","selectChangeHandler","select","renderControls","item","Logout","App","autoLogin","routes","path","component","withRouter","getItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","aplication","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00aef0c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2D0TV\",\"close\":\"Drawer_close__2QQXM\",\"active\":\"Drawer_active__q5YEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__3K43x\",\"open\":\"MenuToggle_open__1iIq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2CD1I\",\"QuizWrapper\":\"Quiz_QuizWrapper__22ZY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1joul\",\"Question\":\"ActiveQuiz_Question__2Jm90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3ncr1\",\"success\":\"AnswerItem_success__3Sg2M\",\"error\":\"AnswerItem_error__94kWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__3YMIW\",\"success\":\"FinishedQuiz_success__18Xhe\",\"error\":\"FinishedQuiz_error__3uc_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__pJo62\",\"error\":\"Button_error__3UM4W\",\"success\":\"Button_success__3KrZk\",\"primary\":\"Button_primary__1hm5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__PiWu-\",\"lds-roller\":\"Loader_lds-roller__3SBD_\",\"center\":\"Loader_center__3o-yd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__28h0l\",\"AuthForm\":\"Auth_AuthForm__3-xD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__N3ByL\",\"invalid\":\"Input_invalid__30xey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__12ySj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__3mcE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__vbv06\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__36dl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2CS9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__fJMzU\"};","import React from 'react';\r\nimport classes from './MenuToggle.module.css';\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [classes.MenuToggle, 'fa'];\r\n\r\n    if(props.isOpen){\r\n        cls.push('fa-times');\r\n        cls.push(classes.open);\r\n    }else{\r\n        cls.push('fa-bars');\r\n    }\r\n\r\n    return (\r\n        <i className={cls.join(' ')} onClick={props.onToggle} />\r\n    );\r\n};\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport classes from './BackDrop.module.css';\r\n\r\nconst BackDrop = props => {\r\n    return (\r\n        <div className={classes.BackDrop} onClick={props.onClick}></div>\r\n    );\r\n};\r\n\r\nexport default BackDrop;","import React, {Component} from 'react';\r\nimport classes from './Drawer.module.css';\r\nimport BackDrop from '../../Ui/BackDrop/BackDrop.js';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Drawer extends Component {\r\n    clickHandler = () => {\r\n        this.props.onClose();\r\n    };\r\n\r\n    renderLinks(links){\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink to={link.to} exact={link.exact} activeClassName={classes.active} onClick={this.clickHandler}>{link.label}</NavLink>\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const cls = [classes.Drawer];\r\n\r\n        if(!this.props.isOpen){\r\n            cls.push(classes.close);\r\n        }\r\n\r\n        const links =  [\r\n            {to: '/', label: 'Список', exact: true}\r\n        ];\r\n\r\n        if(this.props.isAuthenticated){\r\n            links.push({to: '/quiz-creator', label: 'Создать тест', exact: false});\r\n            links.push({to: '/logout', label: 'Выйти', exact: false});\r\n        }else{\r\n            links.push({to: '/auth', label: 'Авторизация', exact: false});\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <BackDrop onClick={this.props.onClose} /> : null}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Drawer;","import React, {Component} from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle.js';\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer.js';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n    state = {menu: false};\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({menu: !this.state.menu});\r\n    };\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer isOpen={this.state.menu} onClose={this.menuCloseHandler} isAuthenticated={this.props.isAuthenticated} />\r\n\r\n                <MenuToggle onToggle={this.toggleMenuHandler} isOpen={this.state.menu} />\r\n                \r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import React from 'react';\r\nimport classes from './AnswerItem.module.css';\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem];\r\n\r\n    if(props.state){\r\n        cls.push(classes[props.state]);\r\n    }\r\n\r\n    return (\r\n        <li className={cls.join(' ')} onClick={() => props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.module.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem.js';\r\n\r\nconst AnswersList = props => {\r\n    return (\r\n        <ul className={classes.AnswersList}>\r\n            {props.answers.map((answer, index) => {\r\n                return (\r\n                    <AnswerItem \r\n                        key={index} \r\n                        answer={answer} \r\n                        onAnswerClick={props.onAnswerClick}\r\n                        state={props.state ? props.state[answer.id] : null}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css';\r\nimport AnswersList from './AnswersList/AnswersList.js';\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n                <span>\r\n                    <strong>{props.answerNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n\r\n                <small>{props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n\r\n            <AnswersList \r\n                state={props.state}\r\n                answers={props.answers} \r\n                onAnswerClick={props.onAnswerClick}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = props => {\r\n    const cls = [classes.Button, classes[props.type]]\r\n\r\n    return (\r\n        <button onClick={props.onClick} className={cls.join(' ')} disabled={props.disabled}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './FinishedQuiz.module.css';\r\nimport Button from '../Ui/Button/Button.js';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if(props.results[key] === 'success'){\r\n            total++;\r\n        }\r\n\r\n        return total;\r\n    }, 0);\r\n\r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = ['fa', props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check', classes[props.results[quizItem.id]]];\r\n\r\n                    return (\r\n                        <li key={index}>\r\n                            <strong>{index + 1}</strong>.&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')} />\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n\r\n            <p>Правильно {successCount} из {props.quiz.length}</p>\r\n\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n                <Link to=\"/\">\r\n                    <Button type=\"success\">Перейти в список тестов</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FinishedQuiz;","import React from 'react';\r\nimport classes from './Loader.module.css';\r\n\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}>\r\n            <div />\r\n            <div />\r\n            <div />\r\n            <div />\r\n            <div />\r\n            <div />\r\n            <div />\r\n            <div />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-b7c90-default-rtdb.firebaseio.com/'\r\n})","// В данном файле создаем константы для файла quiz.js для ключа type в каждой нужной функции\r\nexport const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\r\n\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import axios from '../../axios/axios-quiz.js';\r\nimport { FETCH_QUIZES_ERROR, FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZ_SUCCESS, QUIZ_SET_STATE, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_RETRY } from './actionTypes.js';\r\n\r\nexport function fetchQuizes(){\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart()) // Продумываем какие функции нам нужно отдиспатчить, чтобы загрузить наш quizes\r\n        try{                                                      // Вырезали это из QuizList.js из метода componentDidMount и вставили\r\n            const response = await axios.get('/quizes.json');\r\n\r\n            const quizes = [];\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Тест №${index + 1}`\r\n                })\r\n            });\r\n\r\n            dispatch(fetchQuizesSuccess(quizes)) // Когда мы получаем новый тест, то уже не пользуемся setState, а диспатчим новую функцию которая это будет делать\r\n        }catch(e){\r\n            dispatch(fetchQuizesError(e)) // В случае какой-то ошибки мы будем диспатчить новый екшион\r\n        }\r\n    }\r\n};\r\n\r\nexport function fetchQuizesById(quizId){\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart())\r\n\r\n        try{\r\n            const response = await axios.get(`/quizes/${quizId}.json`);\r\n            const quiz = response.data;\r\n\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        }catch(e){\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n};\r\n\r\nexport function fetchQuizSuccess(quiz){\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n};\r\n\r\nexport function fetchQuizesStart(){ // Три данные функции всегда должны возвращать какой-то объект с обязательным полем type. А эти тайпы мы делаем в файле actionTypes.js\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n};\r\n\r\nexport function fetchQuizesSuccess(quizes){\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n};\r\n\r\nexport function fetchQuizesError(e){\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n};\r\n\r\n\r\n\r\nexport function quizSetState(answerState, results){\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState, results\r\n    }\r\n};\r\n\r\nexport function finishQuiz(){\r\n    return {\r\n        type: FINISH_QUIZ\r\n    }\r\n};\r\n\r\nexport function quizNextQuestion(number){\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        number\r\n    }\r\n};\r\n\r\nexport function retryQuiz(){\r\n    return {\r\n        type: QUIZ_RETRY\r\n    }\r\n};\r\n\r\nexport function quizAnswerClick(answerId){\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz;\r\n\r\n        if(state.answerState){                   // Это все было взято из файла Quiz.js из метода onAnswerClickHandler\r\n            const key = Object.keys(state.answerState)[0];\r\n            if(state.answerState[key] === 'success'){\r\n                return\r\n            }\r\n        }\r\n\r\n        const question  = state.quiz[state.activeQuestion];\r\n        const results   = state.results;\r\n\r\n        if(question.rightAnswerId === answerId){\r\n            if(!results[question.id]){\r\n                results[question.id] = 'success';\r\n            }\r\n\r\n            dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if(isQuizFinished(state)){\r\n                    dispatch(finishQuiz())\r\n                }else{\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                }\r\n\r\n                window.clearTimeout(timeout);\r\n            }, 1000);\r\n        }else{\r\n            results[question.id] = 'error';\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n        }\r\n    }\r\n};\r\n\r\nfunction isQuizFinished(state){\r\n    return state.activeQuestion + 1 === state.quiz.length;\r\n};","import React, {Component} from 'react';\r\nimport classes from './Quiz.module.css';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz.js';\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz.js';\r\nimport Loader from '../../components/Ui/Loader/Loader.js'\r\nimport { connect } from 'react-redux'; // Подключаем функцию connect\r\nimport { fetchQuizesById, quizAnswerClick, retryQuiz } from '../../store/actions/quiz';\r\n\r\nclass Quiz extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchQuizesById(this.props.match.params.id);\r\n    };\r\n\r\n    componentWillUnmount(){\r\n        this.props.retryQuiz();\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n\r\n                    { \r\n                        this.props.loading || !this.props.quiz\r\n                        ? <Loader />\r\n                        : this.props.isFinished \r\n                        ? \r\n                        <FinishedQuiz \r\n                            results={this.props.results}\r\n                            quiz={this.props.quiz}\r\n                            onRetry={this.props.retryQuiz}\r\n                        />\r\n                        :\r\n                        <ActiveQuiz \r\n                            answers={this.props.quiz[this.props.activeQuestion].answers} \r\n                            question={this.props.quiz[this.props.activeQuestion].question}\r\n                            onAnswerClick={this.props.quizAnswerClick}\r\n                            quizLength={this.props.quiz.length}\r\n                            answerNumber={this.props.activeQuestion + 1}\r\n                            state={this.props.answerState}\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nfunction mapStateToProps(state){ // Создаем эту функцию для работы\r\n    return {\r\n        results: state.quiz.results,         // Эти параметры описаны в начальном стейте\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch){ // Создаем эту функцию для работы\r\n    return { // В этой функции мы будем говорить, что ей нужно загрузить какой-то набор тестов для работы\r\n        fetchQuizesById: (id) => dispatch(fetchQuizesById(id)), // функции для диспатчев\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","import React, {Component} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './QuizList.module.css';\r\nimport Loader from '../../components/Ui/Loader/Loader.js';\r\nimport { connect } from 'react-redux'; // Импортируем функцию из библиотеки и оборачиваем в нее наше приложение внизу при экспорте\r\nimport {fetchQuizes} from '../../store/actions/quiz.js'; // Импортируем функцию fetchQuizes из файла\r\n\r\nclass QuizList extends Component{\r\n    renderQuizes(){\r\n        return this.props.quizes.map((quiz) => {  // Теперь мы обращаемся к props потому что теперь это получается как параметр\r\n            return (\r\n                <li key={quiz.id}>\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                        {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n\r\n    componentDidMount(){ // Переделываем эту функцию в соответствии с redux технологией\r\n        this.props.fetchQuizes(); // Вызываем данную функцию, которая в свою очередь будет диспатчить новый action creatorFetchQuizes\r\n        // try{\r\n        //     const response = await axios.get('/quizes.json');\r\n\r\n        //     const quizes = [];\r\n        //     Object.keys(response.data).forEach((key, index) => {\r\n        //         quizes.push({\r\n        //             id: key,\r\n        //             name: `Тест №${index + 1}`\r\n        //         })\r\n        //     });\r\n\r\n        //     this.setState({\r\n        //         quizes,\r\n        //         loading: false\r\n        //     });\r\n        // }catch(e){\r\n        //     console.log(e);\r\n        // }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n\r\n                    { this.props.loading && this.props.quizes.length !== 0 ? <Loader /> : <ul>{this.renderQuizes()}</ul> }\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nfunction mapStateToProps(state){ // Создаем эту функцию для работы\r\n    return {\r\n        quizes: state.quiz.quizes, // Эти два параметра описаны в начальном стейте\r\n        loading: state.quiz.loading\r\n    }\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch){ // Создаем эту функцию для работы\r\n    return { // В этой функции мы будем говорить, что ей нужно загрузить какой-то набор тестов для работы\r\n        fetchQuizes: () => dispatch(fetchQuizes()) // функция для диспатчев\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList); // Во вторые скобки передаем компонент в который хотим обернуть нашу функцию, чтобы этот компонент взаимодействовал со стором","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}){\r\n    return !valid && shouldValidate && touched;\r\n};\r\n\r\nconst Input = props => {\r\n    const inputPype = props.type || 'text';\r\n    const cls       = [classes.Input];\r\n    const htmlFor   = `${inputPype}-${Math.random()}`;\r\n\r\n    if(isInvalid(props)){\r\n        cls.push(classes.invalid);\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input type={inputPype} id={htmlFor} value={props.value} onChange={props.onChange}/>\r\n\r\n            {isInvalid(props) ? <span>{props.errorMessage || 'Введите верное значение'}</span> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import axios from 'axios';\r\nimport {AUTH_SUCCESS, AUTH_LOGOUT} from './actionTypes.js';\r\n\r\nexport function auth(email, password, isLogin){\r\n    return async dispatch => {\r\n        const authData = {email, password,returnSecureToken: true};\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBzFgtqZ0gSd6AcQnn6cf4eGnYkjK5NEUQ';\r\n\r\n        if(isLogin){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBzFgtqZ0gSd6AcQnn6cf4eGnYkjK5NEUQ';\r\n        }\r\n\r\n        const response = await axios.post(url, authData);\r\n        const data = response.data;\r\n\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000) // Здесь мы должны проверять время, т.к. обычно время действия токена дается на 3600 минут, после этого токен сбросится и нужно будет перезайти\r\n\r\n        localStorage.setItem('token', data.idToken); // Заносим в локальное хранилище информацию о токене пользователя\r\n        localStorage.setItem('userId', data.localId); // Заносим в локальное хранилище информацию об айди пользователя\r\n        localStorage.setItem('expirationDate', expirationDate); // Заносим в локальное хранилище информацию о корректной дате сброса ключей\r\n\r\n        dispatch(authSuccess(data.idToken)) // Отдиспатчиваем после всех этих манипуляций с локальным хранилищем наш токен ждя того, чтобы поддерживать локальную сессию\r\n        dispatch(autoLogout(data.expiresIn)) // Задаем, что после 1 часа мы будем делать так, что пользователь потеряет авторизацию на сайте и ему нужно будет по новой войти\r\n    }\r\n};\r\n\r\nexport function autoLogout(time){\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000);\r\n    }\r\n};\r\n\r\nexport function logout(){\r\n    localStorage.removeItem('token'); // Зачищаем локальное хранилище\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('expirationDate');\r\n\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n};\r\n\r\nexport function autoLogin(){\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate')) // Создаем переменную для проверки валидности токена на данный момент\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            }else{\r\n                dispatch(authSuccess(token));\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport function authSuccess(token){\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport classes from './Auth.module.css';\r\nimport Button from '../../components/Ui/Button/Button.js';\r\nimport Input from '../../components/Ui/Input/Input.js';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../store/actions/auth';\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n};\r\n\r\nclass Auth extends Component{\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        );\r\n    };\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        );\r\n\r\n        // const authData = {\r\n        //     email: this.state.formControls.email.value,\r\n        //     password: this.state.formControls.password.value,\r\n        //     returnSecureToken: true\r\n        // }\r\n\r\n        // try{\r\n        //     const response = await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBzFgtqZ0gSd6AcQnn6cf4eGnYkjK5NEUQ', authData);\r\n\r\n        //     console.log(response.data)\r\n        // }catch(e){\r\n        //     console.log(e);\r\n        // }\r\n    };\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    validateControl(value, validation){\r\n        if(!validation){\r\n            return true;\r\n        }\r\n\r\n        let isValid = true;\r\n\r\n        if(validation.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(validation.email){\r\n            isValid = validateEmail(value) && isValid;\r\n        }\r\n\r\n        if(validation.minLength){\r\n            isValid = value.length >= validation.minLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control      = {...formControls[controlName]};\r\n\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        control.valid   = this.validateControl(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = true;\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid;\r\n        });\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        });\r\n    };\r\n\r\n    renderInputs(){\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n\r\n            return (\r\n                <Input key={controlName + index} type={control.type} value={control.value} valid={control.valid} touched={control.touched} label={control.label} shouldValidate={!!control.validation} errorMessage={control.errorMessage} onChange={event => this.onChangeHandler(event, controlName)} />\r\n            );\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n\r\n                    <form className={classes.AuthForm} onSubmit={this.submitHandler}>\r\n                        {this.renderInputs()}\r\n\r\n                        <br/>\r\n                        <Button type=\"success\" disabled={!this.state.isFormValid} onClick={this.loginHandler}>Войти</Button>\r\n                        <Button type=\"primary\" disabled={!this.state.isFormValid} onClick={this.registerHandler}>Зарегистрироваться</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch){ // Создаем эту функцию для работы\r\n    return { // В этой функции мы будем говорить, что ей нужно загрузить какой-то набор тестов для работы\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);","export function createControl(config, validation){\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n};\r\n\r\nexport function validate(value, validation = null){\r\n    if(!validation){\r\n        return true;\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if(validation.reguired){\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    return isValid;\r\n};\r\n\r\nexport function validateForm(formControls){\r\n    let isFormValid = true;\r\n\r\n    for(let control in formControls){\r\n        if(formControls.hasOwnProperty(control)){\r\n            isFormValid = formControls[control].valid && isFormValid;\r\n        }\r\n    }\r\n\r\n    return isFormValid;\r\n};","const Auxililary = props => props.children;\r\n\r\nexport default Auxililary;","import React from 'react';\r\nimport classes from './Select.module.css';\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`;\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {props.options.map((option, index) => {\r\n                    return (\r\n                        <option key={option.value + index} value={option.value}>\r\n                            {option.text}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;","import React, {Component} from 'react';\r\nimport classes from './QuizCreator.module.css';\r\nimport Button from '../Ui/Button/Button.js';\r\nimport {createControl, validate, validateForm} from '../../form/formFramwork.js';\r\nimport Input from '../../components/Ui/Input/Input.js';\r\nimport Auxililary from '../../hoc/Layout/Auxililary/Auxililary.js';\r\nimport Select from '../../components/Ui/Select/Select.js';\r\nimport { connect } from 'react-redux';\r\nimport { createQuizQuestion, finishCreateQuiz } from '../../store/actions/create';\r\n\r\nfunction createOptionControl(number){\r\n    return createControl({\r\n        label: `Вариант ${number}`,\r\n        errorMessage: 'Значение не может быть пустым',\r\n        id: number,\r\n    }, {reguired: true})\r\n};\r\n\r\nfunction createFormControls(){\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Вопрос не может быть пустым'\r\n        }, {reguired: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4)\r\n    };\r\n};\r\n\r\nclass QuizCreator extends Component{\r\n    state = {\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n    };\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls;\r\n\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        };\r\n\r\n        this.props.createQuizQuestion(questionItem);\r\n\r\n        this.setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n        });\r\n    };\r\n\r\n    createQuizHandler = event => {\r\n        event.preventDefault();\r\n            \r\n        this.setState({\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n        });\r\n        this.props.finishCreateQuiz();\r\n\r\n        // Это уже старый метор, применяется уже более новый, он выше с асинк\r\n        // axios.post('https://react-quiz-b7c90-default-rtdb.firebaseio.com/quizes.json', this.state.quiz).then(response => {\r\n        //     console.log(response);\r\n        // }).catch(error => console.log(error));\r\n        \r\n        // TODO: SERVER\r\n    };\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control      = {...formControls[controlName]};\r\n\r\n        control.touched = true;\r\n        control.value   = value;\r\n        control.valid   = validate(control.value, control.vaidation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        });\r\n    };\r\n\r\n    renderControls(){\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n\r\n            return (\r\n                <Auxililary key={controlName + index}>\r\n                    <Input \r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                    />\r\n                    {index === 0 ? <hr/> : null}\r\n                </Auxililary>\r\n            );\r\n        });\r\n    };\r\n\r\n    selectChangeHandler = event => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        });\r\n    };\r\n\r\n    render(){\r\n        const select = <Select \r\n            label=\"Выберите правильный ответ\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4}\r\n            ]}\r\n        />\r\n\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        {this.renderControls()}\r\n\r\n                        {select}\r\n\r\n                        <br/>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Добавить вопрос\r\n                        </Button>\r\n                        <br/>\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={!this.props.quiz.length === 0}\r\n                        >\r\n                            Создать тест\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nfunction mapStateToProps(state){ // Создаем эту функцию для работы\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch){ // Создаем эту функцию для работы\r\n    return { // В этой функции мы будем говорить, что ей нужно загрузить какой-то набор тестов для работы\r\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);","import axios from \"../../axios/axios-quiz.js\";\r\nimport { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"./actionTypes\";\r\n\r\nexport function createQuizQuestion(item){\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n};\r\n\r\nexport function resetQuizCreation(){\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n};\r\n\r\nexport function finishCreateQuiz(){\r\n    return async (dispatch, getState) => {\r\n        await axios.post('/quizes.json', getState().create.quiz)\r\n        dispatch(resetQuizCreation())\r\n    }\r\n};","// Создаем компонент, который будет редиректить нас на гравную страницу после выхода из профиля пользователя\r\nimport React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {logout} from '../../store/actions/auth.js';\r\n\r\nclass Logout extends Component{\r\n    componentDidMount(){\r\n        this.props.logout();\r\n    };\r\n\r\n    render(){\r\n        return <Redirect to=\"/\" />\r\n    };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, {Component} from 'react';\nimport Layout from './hoc/Layout/Layout.js';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom';\nimport Quiz from './containers/Quiz/Quiz.js';\nimport QuizList from './components/QuizList/QuizList.js';\nimport Auth from './components/Auth/Auth.js';\nimport QuizCreator from './components/QuizCreator/QuizCreator.js';\nimport { connect } from 'react-redux';\nimport Logout from './components/Logout/Logout.js';\nimport { autoLogin } from './store/actions/auth.js';\n\nclass App extends Component{\n\n  componentDidMount(){\n    this.props.autoLogin();\n  };\n\n  render(){\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/quiz/:id\" component={Quiz} />\n        <Route path=\"/\" exact component={QuizList} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if(this.props.isAuthenticated){ // Если пользователь вышел из сети (потерял токен авторизации), то переопределяем код верстки\n      routes = (\n        <Switch>\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\n          <Route path=\"/quiz/:id\" component={Quiz} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={QuizList} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <Layout>\n        { routes }\n      </Layout>\n    );\n  };\n};\n\nfunction mapStateToProps(state){\n  return {\n    isAuthenticated: !!state.auth.token // Если токен есть, значит мы авторизованы, а если нет, значит не авторизованны\n  }\n};\n\nfunction mapDispatchToProps(dispatch){\n  return {\n     autoLogin: () => dispatch(autoLogin()) \n  }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    token: null,\r\n\r\n}\r\n\r\nexport default function authReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state, token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state, token: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { RESET_QUIZ_CREATION, CREATE_QUIZ_QUESTION } from \"../actions/actionTypes\";\r\n\r\n\r\nconst initialState = {\r\n    quiz: []\r\n};\r\n\r\nexport default function createReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n};","// Данный файл будет отвечать за редюсер, который относится к тестам, т.к. state компонента QuizList.js и Quiz.js\r\nimport { FETCH_QUIZES_ERROR, FETCH_QUIZES_START, FETCH_QUIZES_SUCCESS, FETCH_QUIZ_SUCCESS, FINISH_QUIZ, QUIZ_NEXT_QUESTION, QUIZ_SET_STATE, QUIZ_RETRY } from '../actions/actionTypes.js';\r\nconst initialState = { // Создается стейт, с которого начинается все наше приложение (state из файла QuizList.js)\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null\r\n};\r\n\r\nexport default function quizReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case FETCH_QUIZES_START: // Делаем три проверки под наши переменный\r\n            return { // Когда все начинает загружаться возвращаем клонированный state но меняем параметр у loading\r\n                ...state, loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS: // Делаем три проверки под наши переменный\r\n            return {\r\n                ...state, loading: false, quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR: // Делаем три проверки под наши переменный\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            }\r\n\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, answerState: action.answerState, results: action.results\r\n            }\r\n\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state, isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state, answerState: null, activeQuestion: action.number\r\n            }\r\n        case QUIZ_RETRY:\r\n            return {\r\n                ...state,\r\n                activeQuestion: 0,\r\n                answerState: null,\r\n                isFinished: false,\r\n                results: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","// rootReducer то по сути функция, которая объединяет все существующие редюсеры\r\nimport {combineReducers} from 'redux'; // Импортируем функцию для объединения всех существующих редюсеров\r\nimport authReducer from './auth.js';\r\nimport createReducer from './create.js';\r\nimport quizReducer from './quiz.js'; // Импортируем наш редюсер\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer, // Зарегистрировали новый стейт\r\n    create: createReducer,\r\n    auth: authReducer // Регистрируем редюсер авторизации для объединения в один\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore, compose, applyMiddleware} from 'redux'; // Для создания этой библиотеки вводим команду: npm install redux react-redux. Импорт функции для работы со стором и вторая функция для работы с compose\nimport {Provider} from 'react-redux'; // Импорт компонента Provider\nimport rootReducer from './store/reducers/rootReducer.js'; // Импортируем наш rootReducer\nimport thunk from 'redux-thunk'; // Для установки данной библиотеки делается команда npm install react-thunk\n\nconst composeEnhancers =                                        // Данная функция была взята из github https://github.com/zalmoxisus/redux-devtools-extension в разделе 1.2 Advanced store setup\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n); // Создаем переменную store, которая определяется импортированной нами функцией, в которую нужно будет передать параметры (редюсеры) - это первый параметр и вторым параметром передаем composeEnhancers в которую в свою очередь передается функция applyMiddleware\n\nconst aplication = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      {aplication}\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}